name: Deploy financeiro-ratc

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare deploy source bundle
        run: |
          set -euo pipefail
          OUT_DIR=out
          rm -rf "$OUT_DIR"
          mkdir -p "$OUT_DIR"

          # Copy source (exclude node_modules/.next/git/logs)
          rsync -a --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude '.next' \
            --exclude 'logs' \
            --exclude 'out' \
            ./ "$OUT_DIR/"

          # Ensure lockfiles and prisma schema are included
          cp -f package.json package-lock.json "$OUT_DIR/"

          # Pack source for server-side build
          tar -C "$OUT_DIR" -czf release.tgz .

      - name: Ensure server directories exist
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR="/opt/financeiro-ratc"
            mkdir -p "${APP_DIR}/uploads" "${APP_DIR}/releases" "${APP_DIR}/shared"

      - name: Upload bundle to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          source: 'release.tgz'
          target: '/opt/financeiro-ratc/uploads'

      - name: Activate release on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_NAME="financeiro-ratc"
            APP_DIR="/opt/${APP_NAME}"
            RELEASES_DIR="${APP_DIR}/releases"
            SHARED_DIR="${APP_DIR}/shared"
            CURRENT_LINK="${APP_DIR}/current"
            RELEASE_NAME="$(date +%Y%m%d%H%M%S)"
            NEW_RELEASE="${RELEASES_DIR}/${RELEASE_NAME}"
            PRISMA_SCHEMA_PATH="prisma/schema.prisma"
            DOMAIN="financeiro.ratc.com.br"

            mkdir -p "${RELEASES_DIR}" "${SHARED_DIR}" "${APP_DIR}/uploads"
            [ -f "${SHARED_DIR}/.env" ] || touch "${SHARED_DIR}/.env"

            mkdir -p "${NEW_RELEASE}"
            tar -C "${NEW_RELEASE}" -xzf "${APP_DIR}/uploads/release.tgz"

            ln -sfn "${SHARED_DIR}/.env" "${NEW_RELEASE}/.env"

            # Build on server using environment from ${SHARED_DIR}/.env
            if [ -f "${NEW_RELEASE}/${PRISMA_SCHEMA_PATH}" ]; then
              cd "${NEW_RELEASE}"

              if ! command -v node >/dev/null 2>&1; then
                echo "Node.js not found on server. Please install Node 22.x and retry." >&2
                exit 1
              fi

              # Install dependencies (include dev to ensure build works), migrate, then build
              npm ci
              npx prisma migrate deploy --schema "${PRISMA_SCHEMA_PATH}"
              npm run build
              # Optionally prune dev dependencies for runtime
              npm prune --omit=dev || true
            fi

            ln -sfn "${NEW_RELEASE}" "${CURRENT_LINK}"
            cd "${CURRENT_LINK}"

            # Start Next.js application
            PORT="${PORT:-3000}"
            START_CMD="node node_modules/next/dist/bin/next start -p ${PORT}"

            if pm2 describe "${APP_NAME}" >/dev/null 2>&1; then
              pm2 restart "${APP_NAME}" --update-env --time
            else
              pm2 start "$START_CMD" --name "${APP_NAME}" --time
            fi

            pm2 save

            # Keep last 5 releases
            cd "${RELEASES_DIR}"
            ls -1t | tail -n +6 | xargs -r rm -rf

            echo "Deploy completed successfully for ${DOMAIN}"
