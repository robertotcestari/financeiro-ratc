name: Deploy financeiro-ratc

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prisma generate
        run: npx prisma generate

      - name: Build application
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          export NEXT_TELEMETRY_DISABLED=1
          export SKIP_BUILD_CHECKS=true
          npm run build

      - name: Prepare deployment bundle
        run: |
          set -euo pipefail
          DEPLOY_DIR=deploy-bundle
          rm -rf "$DEPLOY_DIR"
          mkdir -p "$DEPLOY_DIR"

          # Copy built application and required files
          cp -r .next "$DEPLOY_DIR/"
          cp -r public "$DEPLOY_DIR/" 2>/dev/null || true
          cp package.json package-lock.json "$DEPLOY_DIR/"
          cp -r prisma "$DEPLOY_DIR/"
          
          # Copy next config if exists
          cp next.config.* "$DEPLOY_DIR/" 2>/dev/null || true

          # Create tarball
          tar -czf deploy.tar.gz -C "$DEPLOY_DIR" .

      - name: Ensure server directories exist
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR="/opt/financeiro-ratc"
            mkdir -p "${APP_DIR}/app" "${APP_DIR}/shared"
            [ -f "${APP_DIR}/shared/.env" ] || touch "${APP_DIR}/shared/.env"

      - name: Deploy to server via rsync
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: deploy.tar.gz
          remote_path: /opt/financeiro-ratc/
          remote_host: ${{ secrets.VPS_HOST }}
          remote_user: ${{ secrets.VPS_USER }}
          remote_key: ${{ secrets.VPS_SSH_KEY }}
          remote_port: ${{ secrets.VPS_PORT || 22 }}

      - name: Extract and start application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_NAME="financeiro-ratc"
            APP_DIR="/opt/${APP_NAME}"
            APP_PATH="${APP_DIR}/app"
            SHARED_DIR="${APP_DIR}/shared"
            DOMAIN="financeiro.ratc.com.br"

            # Extract new build
            cd "${APP_DIR}"
            tar -xzf deploy.tar.gz -C "${APP_PATH}" --overwrite

            # Link shared .env file
            ln -sfn "${SHARED_DIR}/.env" "${APP_PATH}/.env"

            # Install production dependencies and run migrations
            cd "${APP_PATH}"
            npm ci --omit=dev
            npx prisma migrate deploy

            # Restart or start application with PM2
            PORT="${PORT:-3000}"
            START_CMD="node node_modules/next/dist/bin/next start -p ${PORT}"

            if pm2 describe "${APP_NAME}" >/dev/null 2>&1; then
              pm2 restart "${APP_NAME}" --update-env --time
            else
              pm2 start "$START_CMD" --name "${APP_NAME}" --time
            fi

            pm2 save

            # Cleanup
            rm -f "${APP_DIR}/deploy.tar.gz"

            echo "Deploy completed successfully for ${DOMAIN}"
